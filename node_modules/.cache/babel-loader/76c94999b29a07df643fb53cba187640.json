{"ast":null,"code":"// src/index.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useCallback, useState, useId } from \"react\";\n\nfunction useDisclosure() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const handleOpen = useCallbackRef(onOpenProp);\n  const handleClose = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const isOpen = isOpenProp !== void 0 ? isOpenProp : isOpenState;\n  const isControlled = isOpenProp !== void 0;\n  const uid = useId();\n  const id = idProp ?? `disclosure-${uid}`;\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n\n    handleClose == null ? void 0 : handleClose();\n  }, [isControlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n\n    handleOpen == null ? void 0 : handleOpen();\n  }, [isControlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [isOpen, onOpen, onClose]);\n\n  function getButtonProps() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return { ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n\n      onClick(event) {\n        var _a;\n\n        (_a = props2.onClick) == null ? void 0 : _a.call(props2, event);\n        onToggle();\n      }\n\n    };\n  }\n\n  function getDisclosureProps() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return { ...props2,\n      hidden: !isOpen,\n      id\n    };\n  }\n\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps,\n    getDisclosureProps\n  };\n}\n\nexport { useDisclosure };","map":{"version":3,"names":["useCallbackRef","useCallback","useState","useId","useDisclosure","props","onClose","onCloseProp","onOpen","onOpenProp","isOpen","isOpenProp","id","idProp","handleOpen","handleClose","isOpenState","setIsOpen","defaultIsOpen","isControlled","uid","onToggle","getButtonProps","props2","onClick","event","_a","call","getDisclosureProps","hidden"],"sources":["C:/Users/thaiz/OneDrive/Documentos/GITHUB/ROB3_AssistenteFincanceiro/node_modules/@chakra-ui/react-use-disclosure/dist/index.esm.js"],"sourcesContent":["// src/index.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useCallback, useState, useId } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const handleOpen = useCallbackRef(onOpenProp);\n  const handleClose = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const isOpen = isOpenProp !== void 0 ? isOpenProp : isOpenState;\n  const isControlled = isOpenProp !== void 0;\n  const uid = useId();\n  const id = idProp ?? `disclosure-${uid}`;\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    handleClose == null ? void 0 : handleClose();\n  }, [isControlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    handleOpen == null ? void 0 : handleOpen();\n  }, [isControlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [isOpen, onOpen, onClose]);\n  function getButtonProps(props2 = {}) {\n    return {\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick(event) {\n        var _a;\n        (_a = props2.onClick) == null ? void 0 : _a.call(props2, event);\n        onToggle();\n      }\n    };\n  }\n  function getDisclosureProps(props2 = {}) {\n    return {\n      ...props2,\n      hidden: !isOpen,\n      id\n    };\n  }\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps,\n    getDisclosureProps\n  };\n}\nexport {\n  useDisclosure\n};\n"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,mCAA/B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,KAAhC,QAA6C,OAA7C;;AACA,SAASC,aAAT,GAAmC;EAAA,IAAZC,KAAY,uEAAJ,EAAI;EACjC,MAAM;IACJC,OAAO,EAAEC,WADL;IAEJC,MAAM,EAAEC,UAFJ;IAGJC,MAAM,EAAEC,UAHJ;IAIJC,EAAE,EAAEC;EAJA,IAKFR,KALJ;EAMA,MAAMS,UAAU,GAAGd,cAAc,CAACS,UAAD,CAAjC;EACA,MAAMM,WAAW,GAAGf,cAAc,CAACO,WAAD,CAAlC;EACA,MAAM,CAACS,WAAD,EAAcC,SAAd,IAA2Bf,QAAQ,CAACG,KAAK,CAACa,aAAN,IAAuB,KAAxB,CAAzC;EACA,MAAMR,MAAM,GAAGC,UAAU,KAAK,KAAK,CAApB,GAAwBA,UAAxB,GAAqCK,WAApD;EACA,MAAMG,YAAY,GAAGR,UAAU,KAAK,KAAK,CAAzC;EACA,MAAMS,GAAG,GAAGjB,KAAK,EAAjB;EACA,MAAMS,EAAE,GAAGC,MAAM,IAAK,cAAaO,GAAI,EAAvC;EACA,MAAMd,OAAO,GAAGL,WAAW,CAAC,MAAM;IAChC,IAAI,CAACkB,YAAL,EAAmB;MACjBF,SAAS,CAAC,KAAD,CAAT;IACD;;IACDF,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,EAA1C;EACD,CAL0B,EAKxB,CAACI,YAAD,EAAeJ,WAAf,CALwB,CAA3B;EAMA,MAAMP,MAAM,GAAGP,WAAW,CAAC,MAAM;IAC/B,IAAI,CAACkB,YAAL,EAAmB;MACjBF,SAAS,CAAC,IAAD,CAAT;IACD;;IACDH,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,EAAxC;EACD,CALyB,EAKvB,CAACK,YAAD,EAAeL,UAAf,CALuB,CAA1B;EAMA,MAAMO,QAAQ,GAAGpB,WAAW,CAAC,MAAM;IACjC,IAAIS,MAAJ,EAAY;MACVJ,OAAO;IACR,CAFD,MAEO;MACLE,MAAM;IACP;EACF,CAN2B,EAMzB,CAACE,MAAD,EAASF,MAAT,EAAiBF,OAAjB,CANyB,CAA5B;;EAOA,SAASgB,cAAT,GAAqC;IAAA,IAAbC,MAAa,uEAAJ,EAAI;IACnC,OAAO,EACL,GAAGA,MADE;MAEL,iBAAiBb,MAFZ;MAGL,iBAAiBE,EAHZ;;MAILY,OAAO,CAACC,KAAD,EAAQ;QACb,IAAIC,EAAJ;;QACA,CAACA,EAAE,GAAGH,MAAM,CAACC,OAAb,KAAyB,IAAzB,GAAgC,KAAK,CAArC,GAAyCE,EAAE,CAACC,IAAH,CAAQJ,MAAR,EAAgBE,KAAhB,CAAzC;QACAJ,QAAQ;MACT;;IARI,CAAP;EAUD;;EACD,SAASO,kBAAT,GAAyC;IAAA,IAAbL,MAAa,uEAAJ,EAAI;IACvC,OAAO,EACL,GAAGA,MADE;MAELM,MAAM,EAAE,CAACnB,MAFJ;MAGLE;IAHK,CAAP;EAKD;;EACD,OAAO;IACLF,MADK;IAELF,MAFK;IAGLF,OAHK;IAILe,QAJK;IAKLF,YALK;IAMLG,cANK;IAOLM;EAPK,CAAP;AASD;;AACD,SACExB,aADF"},"metadata":{},"sourceType":"module"}