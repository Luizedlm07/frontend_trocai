{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\"; // src/skeleton.tsx\n\nimport { usePrevious } from \"@chakra-ui/react-use-previous\"; // ../../utilities/shared-utils/src/index.ts\n\nvar cx = function () {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n}; // src/skeleton.tsx\n\n\nimport { chakra, cssVar, forwardRef, keyframes, omitThemingProps, useStyleConfig, useToken } from \"@chakra-ui/system\"; // src/use-is-first-render.ts\n\nimport { useEffect, useRef } from \"react\";\n\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n} // src/skeleton.tsx\n\n\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Skeleton\", props);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [startColor, endColor]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n\n  const _className = cx(\"chakra-skeleton\", className);\n\n  const cssVarStyles = { ...(startColorVar && {\n      [$startColor.variable]: startColorVar\n    }),\n    ...(endColorVar && {\n      [$endColor.variable]: endColorVar\n    })\n  };\n\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */React.createElement(chakra.div, {\n      ref,\n      className: _className,\n      __css: {\n        animation\n      },\n      ...rest\n    });\n  }\n\n  return /* @__PURE__ */React.createElement(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: { ...styles,\n      ...cssVarStyles,\n      _dark: { ...cssVarStyles\n      },\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\nSkeleton.displayName = \"Skeleton\"; // src/skeleton-text.tsx\n\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\n\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\n\nvar defaultNoOfLines = 3;\n\nvar SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n\n    return \"100%\";\n  };\n\n  const _className = cx(\"chakra-skeleton__group\", className);\n\n  return /* @__PURE__ */React.createElement(chakra2.div, {\n    className: _className,\n    ...rest\n  }, numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */React.createElement(Skeleton, {\n      key: numbers.length.toString() + number,\n      startColor,\n      endColor,\n      isLoaded,\n      fadeDuration,\n      speed,\n      ...sizeProps\n    }, index === 0 ? children : void 0);\n  }));\n};\n\nSkeletonText.displayName = \"SkeletonText\"; // src/skeleton-circle.tsx\n\nvar SkeletonCircle = _ref => {\n  let {\n    size = \"2rem\",\n    ...rest\n  } = _ref;\n  return /* @__PURE__ */React.createElement(Skeleton, {\n    borderRadius: \"full\",\n    boxSize: size,\n    ...rest\n  });\n};\n\nSkeletonCircle.displayName = \"SkeletonCircle\";\nexport { Skeleton, SkeletonCircle, SkeletonText };","map":{"version":3,"names":["React","usePrevious","cx","classNames","filter","Boolean","join","chakra","cssVar","forwardRef","keyframes","omitThemingProps","useStyleConfig","useToken","useEffect","useRef","useIsFirstRender","isFirstRender","current","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","$startColor","$endColor","fade","from","opacity","to","bgFade","borderColor","reference","background","Skeleton","props","ref","styles","startColor","endColor","isLoaded","fadeDuration","speed","className","rest","startColorVar","endColorVar","wasPreviouslyLoaded","_className","cssVarStyles","variable","animation","createElement","div","__css","_dark","defaultProps","displayName","useBreakpointValue","chakra2","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","noOfLines","spacing","skeletonHeight","children","noOfLinesValue","numbers","getWidth","length","number","sizeProps","mb","width","height","key","toString","SkeletonCircle","size","borderRadius","boxSize"],"sources":["C:/Users/thaiz/OneDrive/Documentos/GITHUB/trabalhaSampa/node_modules/@chakra-ui/skeleton/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// src/skeleton.tsx\nimport {\n  chakra,\n  cssVar,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig,\n  useToken\n} from \"@chakra-ui/system\";\n\n// src/use-is-first-render.ts\nimport { useEffect, useRef } from \"react\";\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\n// src/skeleton.tsx\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Skeleton\", props);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ React.createElement(chakra.div, {\n      ref,\n      className: _className,\n      __css: { animation },\n      ...rest\n    });\n  }\n  return /* @__PURE__ */ React.createElement(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: {\n      ...styles,\n      ...cssVarStyles,\n      _dark: { ...cssVarStyles },\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\nSkeleton.displayName = \"Skeleton\";\n\n// src/skeleton-text.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ...rest\n  }, numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ React.createElement(Skeleton, {\n      key: numbers.length.toString() + number,\n      startColor,\n      endColor,\n      isLoaded,\n      fadeDuration,\n      speed,\n      ...sizeProps\n    }, index === 0 ? children : void 0);\n  }));\n};\nSkeletonText.displayName = \"SkeletonText\";\n\n// src/skeleton-circle.tsx\nvar SkeletonCircle = ({\n  size = \"2rem\",\n  ...rest\n}) => /* @__PURE__ */ React.createElement(Skeleton, {\n  borderRadius: \"full\",\n  boxSize: size,\n  ...rest\n});\nSkeletonCircle.displayName = \"SkeletonCircle\";\nexport {\n  Skeleton,\n  SkeletonCircle,\n  SkeletonText\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}